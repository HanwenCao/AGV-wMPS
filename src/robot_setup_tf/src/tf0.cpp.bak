#include <ros/ros.h>
#include <tf/transform_listener.h>
#include <nav_msgs/Odometry.h>

int main(int argc, char** argv){
  ros::init(argc, argv, "tf0");

  ros::NodeHandle node;
	ros::Publisher odom_pub = node.advertise<nav_msgs::Odometry>("odom", 50);

  tf::TransformListener listener;

  ros::Rate rate(10.0);
  while (node.ok()){
    tf::StampedTransform transform;
    try{
      listener.lookupTransform("/odom", "/base_link",
                               ros::Time(0), transform);
    }
    catch (tf::TransformException &ex) {
      ROS_ERROR("%s",ex.what());
      ros::Duration(1.0).sleep();
      continue;
    }
		nav_msgs::Odometry odom;
    odom.header.stamp = transform.stamp_;
    odom.header.frame_id = "t1";

    //set the position
    odom.pose.pose.position.x = transform.getOrigin().x();
    odom.pose.pose.position.y = transform.getOrigin().y();
    odom.pose.pose.position.z = 0.0;
    odom.pose.pose.orientation.x = transform.getRotation().x();
		odom.pose.pose.orientation.y = transform.getRotation().y();
		odom.pose.pose.orientation.z = transform.getRotation().z();
 		odom.pose.pose.orientation.w = transform.getRotation().w();	
    odom.child_frame_id = "t2";
		odom_pub.publish(odom);

    rate.sleep();
  }
  return 0;
};
